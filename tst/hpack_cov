#!/bin/sh
#
# Copyright (c) 2016 Dridi Boukelmoune
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

. "$(dirname "$0")"/common.sh

_ -----------
_ Wrong usage
_ -----------

! ./hdecode # missing param
! ./hencode unexpected_param

! ./hdecode --expect-error UNKNOWN

! ./ngdecode # missing param

_ ----------
_ Empty name
_ ----------

mk_msg </dev/null
mk_tbl </dev/null

mk_bin <<EOF
00000000 | literal field (0000) without indexing
00000000 | field name has a length of zero octets
EOF

tst_decode --expect-error LEN

_ -----------
_ Empty value
_ -----------

mk_bin <<EOF
01000001 | dynamic field (01) with indexed name 1
00000000 | field value has a length of zero octets
EOF

mk_msg <<EOF
:authority: 
EOF

mk_tbl <<EOF
[  1] (s =  42) :authority: 
      Table size:  42
EOF

mk_enc <<EOF
dynamic idx 1 str 
EOF

tst_decode
tst_encode

_ -------------------------
_ Empty Huffman-coded value
_ -------------------------

mk_bin <<EOF
01000001 | dynamic field (01) with indexed name 1
10000000 | field value has a length of zero octets
EOF

mk_enc <<EOF
dynamic idx 1 huf 
EOF

tst_decode
tst_encode

_ -----------------------------
_ Validate pseudo-headers names
_ -----------------------------

mk_hex <<EOF
0005 3a70 6174 6801 2f                  | ..:path./
EOF

mk_tbl </dev/null

mk_enc <<EOF
literal str :path str /
EOF

tst_encode

_ -----------------------------------
_ Invalid characters for a field name
_ -----------------------------------

tst_invalid_char() {
	printf '%s\n' "$1" | mk_enc
	tst_encode --expect-error CHR
}

tst_invalid_char "literal str Name str value"

_ -------------------------
_ Encode exactly 256 octets
_ -------------------------

# A 253-characters long string is made of 3s because its ASCII hexadecimal
# happens to be 33. So it can be used to both encode the string and its
# hexdump. All this effort for a single branch in the code :)
#
# - 01   -> literal field with name index 1 (:authority)
# - 7f7e -> Character string of length 253

mk_chars 3 "01 7f7e %506s"             | mk_hex
mk_chars 3 "literal idx 1 str %253s\n" | mk_enc
mk_tbl </dev/null

tst_encode
