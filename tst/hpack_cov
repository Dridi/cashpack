#!/bin/sh
#
# Copyright (c) 2016 Dridi Boukelmoune
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

. "$(dirname "$0")"/common.sh

_ -----------
_ Wrong usage
_ -----------

! ./hdecode # missing param
! ./hencode unexpected_param

! ./hdecode --expect-error UNKNOWN

! ./ngdecode # missing param

! ./hdecode  --expect-error BSY /dev/null
! ./ngdecode --expect-error BSY /dev/null

_ --------
_ Aborting
_ --------

mk_hex </dev/null

! tst_solely hdecode  tst_decode --decoding-spec abort
! tst_solely ngdecode tst_decode --decoding-spec abort

mk_enc <<EOF
dynamic str name str value
dynamic str other str header
dynamic str first str entry
send
abort
EOF

! tst_encode

_ ------------------
_ Decoding spec woes
_ ------------------

! tst_solely hdecode tst_decode --decoding-spec Unknown

_ -----------------
_ Encoding DSL woes
_ -----------------

syntax_error() {
	mk_enc <<-EOF
	$1
	EOF
	! tst_encode
}

syntax_error "unknown-command"
syntax_error "literal xyz wrong-name-type"
syntax_error "literal idx 1 xyz wrong-value-type"

_ -------------------------
_ Encode exactly 256 octets
_ -------------------------

# A 253-characters long string is made of 3s because its ASCII hexadecimal
# happens to be 33. So it can be used to both encode the string and its
# hexdump. All this effort for a single branch in the code :)
#
# - 01   -> literal field with name index 1 (:authority)
# - 7f7e -> Character string of length 253

mk_chars 3 "01 7f7e %506s"             | mk_hex
mk_chars 3 "literal idx 1 str %253s\n" | mk_enc
mk_tbl </dev/null

tst_encode

_ ----------------------
_ Trim the dynamic table
_ ----------------------

mk_hex <<EOF
3fe1 0700 0564 756d 6d79 0668 6561 6465 | ?....dummy.heade
72                                      | r
EOF

mk_msg <<EOF
dummy: header
EOF

mk_enc <<EOF
# resize and no-op trim
resize 1024
trim

# trigger update and trim
literal str dummy str header
send
trim
EOF

tst_encode

_ ------------------------------------------
_ Not enough space for indexed name or value
_ ------------------------------------------

mk_bin <<EOF
10000101 | indexed field 5 (:path: /index.html)
EOF

tst_solely hdecode tst_decode --expect-error BIG --buffer-size 4 # fail name
tst_solely hdecode tst_decode --expect-error BIG --buffer-size 8 # fail value

_ ---------------------------------
_ Not enough space for a raw string
_ ---------------------------------

mk_hex <<EOF
0003 746f 6f03 6269 67                  | ..too.big
EOF

tst_solely hdecode tst_decode --expect-error BIG --buffer-size 6

_ -----------------------------------------------
_ No space for the null character of a raw string
_ -----------------------------------------------

mk_hex <<EOF
0005 656d 7074 7900                     | ..empty.
EOF

tst_solely hdecode tst_decode --expect-error BIG --buffer-size 6

_ ---------------------------------------------------
_ No space for the null character of a Huffman string
_ ---------------------------------------------------

mk_hex <<EOF
0005 656d 7074 7980                     | ..empty.
EOF

tst_solely hdecode tst_decode --expect-error BIG --buffer-size 6

_ -----------------------------------------
_ Break after a never-encoded field integer
_ -----------------------------------------

mk_bin <<EOF
00010000 | Never-indexed field
00000000 | Field name of length 0
EOF

tst_solely hdecode tst_decode --decoding-spec p1, --expect-error LEN
